<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>pl.edu.pjatk</groupId>
    <artifactId>NAIWinterSemester</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <modules>
        <module>FuzzyLogicAutoTipper</module>
        <module>OttelloGame</module>
        <module>NeuralNetworks</module>
        <module>NeuralNetworks</module>
    </modules>

    <properties>
        <!-- Change the nd4j.backend property to nd4j-cuda-9.0-platform or nd4j-cuda-9.2-platform to use CUDA GPUs -->
        <nd4j.backend>nd4j-native-platform</nd4j.backend>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <shadedClassifier>bin</shadedClassifier>
        <java.version>1.8</java.version>
        <nd4j.version>1.0.0-beta2</nd4j.version>
        <dl4j.version>1.0.0-beta2</dl4j.version>
        <datavec.version>1.0.0-beta2</datavec.version>
        <arbiter.version>1.0.0-beta2</arbiter.version>
        <rl4j.version>1.0.0-beta2</rl4j.version>
        <!-- For Spark examples: change the _1 to _2 to switch between Spark 1 and Spark 2 -->
        <dl4j.spark.version>1.0.0-beta2_spark_1</dl4j.spark.version>
        <datavec.spark.version>1.0.0-beta2_spark_1</datavec.spark.version>
        <!-- Scala binary version: DL4J's Spark and UI functionality are released with both Scala 2.10 and 2.11 support -->
        <scala.binary.version>2.11</scala.binary.version>
        <guava.version>19.0</guava.version>
        <logback.version>1.1.7</logback.version>
        <jfreechart.version>1.0.13</jfreechart.version>
        <jcommon.version>1.0.23</jcommon.version>
        <maven-shade-plugin.version>3.1.0</maven-shade-plugin.version>
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
        <maven.minimum.version>3.3.1</maven.minimum.version>
        <jackson.version>2.5.1</jackson.version>
    </properties>

    <!-- Maven Enforcer: Ensures user has an up to date version of Maven before building -->
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-default</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[${maven.minimum.version},)</version>
                                    <message>********** Minimum Maven Version is ${maven.minimum.version}. Please upgrade Maven before continuing (run "mvn --version" to check). **********</message>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>